{"version":3,"sources":["components/AppBar/index.js","Services/api.js","components/Cards/Repos.js","components/Cards/SingleCard.js","components/Cards/index.js","components/Content/index.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","title","ButtonAppBar","classes","React","useState","open","setOpen","handleClose","className","AppBar","position","Toolbar","Typography","variant","component","IconButton","color","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","api","axios","create","baseURL","Repos","props","List","repos","length","map","repo","ListItem","key","ListItemAvatar","Avatar","ListItemText","primary","name","ListItemSecondaryAction","href","html_url","edge","aria-label","empty","loading","card","minWidth","margin","box","display","alignItems","justifyContent","SingleCard","expanded","setExpanded","setRepos","setEmpty","setLoading","a","get","item","login","response","data","Card","CardHeader","avatar","alt","src","avatar_url","subheader","score","action","CardActions","size","Collapse","in","timeout","unmountOnExit","CardContent","Box","CircularProgress","Cards","items","container","Content","user","setUser","setData","event","preventDefault","Container","maxWidth","onSubmit","TextField","required","fullWidth","label","autoComplete","autoFocus","onChange","target","value","type","submit","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.efeb737d.chunk.js","sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"h1\" className={classes.title}>\n            GitHub - Material-UI\n          </Typography>\n          <IconButton color=\"inherit\" onClick={handleClickOpen}>\n            <HelpOutlineIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Informações</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Use a aplicação para buscar usuários no GitHub e visualizar seus respectivos repositórios.\n          </DialogContentText>\n          <DialogContentText>\n            Aplicação desenvolvida com o objetivo de treinar e familiarizar com o uso do framework Material-UI e com a Api React Hooks.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Fechar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com/',\n});\n\nexport default api;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport LinkIcon from '@material-ui/icons/Link';\nimport Link from '@material-ui/core/Link';\n\nexport default function Repos(props) {\n  return (\n    <List>\n      {props.repos.length > 0\n        && props.repos.map((repo) => (\n          <ListItem key={repo.id}>\n            <ListItemAvatar>\n              <Avatar>\n                <FolderIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={repo.name} />\n            <ListItemSecondaryAction>\n              <Link href={repo.html_url}>\n                <IconButton edge=\"end\" aria-label=\"link\">\n                  <LinkIcon />\n                </IconButton>\n              </Link>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n\n      {props.empty && !props.loading\n        && (\n        <ListItem>\n          <ListItemText primary=\"Nenhum repositório encontrado!\" />\n        </ListItem>\n        )}\n    </List>\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport Collapse from '@material-ui/core/Collapse';\nimport CardContent from '@material-ui/core/CardContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport LinkIcon from '@material-ui/icons/Link';\nimport Link from '@material-ui/core/Link';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport api from '../../Services/api';\nimport Repos from './Repos';\n\nconst useStyles = makeStyles({\n  card: {\n    minWidth: 275,\n    margin: '15px 0',\n  },\n  box: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: '15px 0',\n  },\n});\n\nexport default function SingleCard(props) {\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = useState(false);\n  const [repos, setRepos] = useState([]);\n  const [empty, setEmpty] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  async function handleExpandClick() {\n    setExpanded(!expanded);\n\n    if (!repos.length) {\n      setLoading(true);\n      const response = await api.get(`users/${props.item.login}/repos`);\n      setEmpty(!(response.data.length > 0));\n      setRepos(response.data);\n      setLoading(false);\n    }\n  }\n\n  const { item } = props;\n\n  return (\n    <Card key={item.id} className={classes.card}>\n      <CardHeader\n        avatar={<Avatar aria-label=\"recipe\" alt={props.item.login} src={props.item.avatar_url} />}\n        title={props.item.login}\n        subheader={`Score: ${props.item.score}`}\n        action={(\n          <Link href={props.item.html_url}>\n            <IconButton aria-label=\"settings\">\n              <LinkIcon />\n            </IconButton>\n          </Link>\n        )}\n      />\n      <CardActions>\n        <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={handleExpandClick}>Repositórios</Button>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Repos repos={repos} empty={empty} loading={loading} />\n\n          {loading\n            && (\n            <Box component=\"div\" className={classes.box}>\n              <CircularProgress />\n            </Box>\n            )}\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n","import React from 'react';\n\nimport SingleCard from './SingleCard';\n\nexport default function Cards(props) {\n  return (\n    props.data.items.map((item) => (\n      <SingleCard key={item.id} item={item} />\n    ))\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\n\nimport api from '../../Services/api';\nimport Cards from '../Cards';\n\n// eslint-disable-next-line no-unused-vars\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    margin: '15px auto',\n  },\n  box: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: '15px 0',\n  },\n}));\n\nexport default function Content() {\n  const [user, setUser] = useState('');\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(false);\n  const classes = useStyles();\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    setData(null);\n    setLoading(true);\n\n    const response = await api.get(`search/users?q=${user}`);\n\n    setData(response.data);\n    setLoading(false);\n  }\n\n  return (\n    <Container maxWidth=\"sm\" className={classes.container}>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"user\"\n          label=\"Usuário\"\n          name=\"user\"\n          autoComplete=\"user\"\n          autoFocus\n          onChange={(event) => setUser(event.target.value)}\n          value={user}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Buscar\n        </Button>\n      </form>\n\n      {loading\n        && (\n        <Box component=\"div\" className={classes.box}>\n          <CircularProgress />\n        </Box>\n        )}\n\n      {data\n        && (\n          <Cards data={data} />\n        )}\n\n    </Container>\n  );\n}\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport AppBar from './components/AppBar';\nimport Content from './components/Content';\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <AppBar />\n      <Content />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}